{"version":3,"sources":["components/common/Navbar.js","components/common/Footer.js","components/dashboard/Employeelist.js","components/dashboard/Editemployee.js","components/dashboard/Addemployee.js","components/others-scrap/Data2.js","components/dashboard/dashboard.js","assets/img/faces/face-3.jpg","components/others-scrap/Userc.js","components/common/UserProfile.js","components/dashboard/Cards.js","components/common/Manage.js","components/others-scrap/Salesc.js","components/common/Sales.js","components/common/Sidebar.js","components/batches/batch.js","components/courses/course.js","components/journey/journey.js","components/lectures/lecture.js","components/master-journey/mstjourney.js","components/mcqs/mcq.js","components/pdf/pdf.js","components/ppt/ppt.js","components/project/project.js","components/student/student.js","components/topics/topic.js","components/videos/videos.js","components/qna/qna.js","components/batches/editbatch.js","components/courses/editcourse.js","components/journey/editjourney.js","components/lectures/editlecture.js","components/master-journey/editmstjourney.js","components/mcqs/editmcq.js","components/pdf/editpdf.js","components/ppt/editppt.js","components/project/editproject.js","components/student/editstudent.js","components/topics/edittopic.js","components/videos/editvideos.js","components/qna/editqna.js","components/batches/addbatch.js","components/courses/addcourse.js","components/journey/addjourney.js","components/lectures/addlecture.js","components/master-journey/addmstjourney.js","components/mcqs/addmcq.js","components/pdf/addpdf.js","components/ppt/addppt.js","components/project/addproject.js","components/student/addstudent.js","components/topics/addtopic.js","components/videos/addvideos.js","components/qna/addqna.js","components/dashboard/Main.js","components/dashboard/Login.js","App.js","index.js"],"names":["Navbar","class","href","type","id","for","className","to","Footer","Component","BaseapiUrl","Employeelist","props","state","employees","IsApiError","fetch","then","res","json","result","setState","error","EmpId","this","method","response","a","data","ok","message","status","Promise","reject","filter","employee","Id","alert","catch","console","employeeslist","length","variant","Table","map","emp","EmployeeName","EmployeeSalary","Adress","Button","onClick","deleteEmployee","React","Editemployee","employeeName","employeeSalary","employeeAddress","handleChange","bind","event","name","target","value","Empid","match","params","GetEmployeeById","undefined","Math","floor","random","body","requestOptions","headers","Accept","JSON","stringify","baseurl","results","e","Row","Col","sm","Form","onSubmit","handleSubmit","Group","controlId","Label","Control","onChange","placeholder","UpdateEmployee","Addemployee","AddEmployee","Data2","Dashboard","tasks","title","description","User","Cards","Manage","DescriptionRenderer","field","SORTERS","mapper","b","localeCompare","count","service","payload","Array","from","sort","x","direction","getSorter","resolve","task","push","styles","container","margin","width","height","Salesc","style","caption","fetchItems","trigger","submitText","validate","values","errors","label","hideInCreateForm","render","Sales","Batch","deletebatch","Course","deletecourse","Journey","deletejourney","Lecture","deletelecture","Mstjourney","deletemstjourney","Mcq","mcqs","datas","cols","setTimeout","$","DataTable","resp","warn","mcq","rows","McqId","_id","mcqslist","border","deletemcq","Pdf","pdfs","pdf","PdfId","pdflist","link","deletepdf","Ppt","ppts","PptId","ppt","pptslist","deleteppt","Project","deleteproject","Student","deletestudent","Topic","deletetopic","Videos","deletevideo","Qna","qnas","interest","QnaId","qna","qnalist","question","options","answer","deleteqna","Editbatch","Updatebatch","Editcourse","Updatecourse","Editjourney","Updatejourney","Editlecture","Updatelecture","Editmstjourney","Updatemstjourney","Editmcq","mcqname","qnaoptionlist","qnaoptionlistarr","isDeleted","drpdwnhandleChange","getQnaIdvalue","isArray","Mcqid","GetMcqById","preselectedoptions","forEach","file","isFixed","opt","defaultValue","isMulti","Updatemcq","Editpdf","pdfname","pdflink","Pdfid","Updatepdf","Editppt","pptname","pptlink","Pptid","log","Updateppt","Editproject","Updateproject","Editstudent","Updatestudent","Edittopic","Updatetopic","Editvideos","Updatevideo","Editqna","optionone","optiontwo","optionthree","optionfour","Qnaid","GetQnaById","Updateqna","Addbatch","addbatch","Addcourse","addcourse","Addjourney","addjourney","Addlecture","addlecture","Addmstjourney","addmstjourney","Addmcq","labelKey","valueKey","addmcq","Addpdf","addpdf","Addppt","addppt","Addproject","addproject","Addstudent","addstudent","Addtopic","addtopic","Addvideos","addvideos","Addqna","addqna","Main","Sidebar","path","component","Masterjourney","Editmasterjourney","Addmasterjourney","UserProfile","Login","required","autofocus","App","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9a21e6af.chunk.js","sourcesContent":["\r\nimport { Link } from 'react-router-dom'\r\n//import '../../assets/css/Tog.css';\r\nimport \"../../assets/css/style.css\";\r\nimport { FaBuffer , FaCentercode} from 'react-icons/fa';\r\nimport React from 'react'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n   <div class=\"c-wrapper c-fixed-components \">\r\n\r\n  <header class=\"c-header c-header-light c-header-fixed c-header-with-subheader\">\r\n      <a class=\"c-header-brand d-lg-none\" href=\"#\">\r\n         </a>\r\n         <input type=\"checkbox\" class=\"openSidebarMenu\" id=\"openSidebarMenu\"/>\r\n    <label for=\"openSidebarMenu\" class=\"sidebarIconTogglee\">\r\n      <div class=\"spinner diagonal part-1\"></div>\r\n      <div class=\"spinner horizontal\"></div>\r\n      <div class=\"spinner diagonal part-2\"></div>\r\n    </label>\r\n    <br></br>\r\n    <div>\r\n        <ul class=\"c-header-nav d-md-down-none\">\r\n          <li class=\"c-header-nav-item px-3\"><a class=\"c-header-nav-link\" href=\"#\"></a></li>\r\n        \r\n          <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to='/dashboard'>\r\n                  <span className=\"no-icon\"> Dashboard </span>\r\n                </Link>\r\n              </li>\r\n        \r\n        </ul>\r\n        </div>\r\n        <ul class=\"c-header-nav ml-auto mr-4\">\r\n        \r\n        \r\n         \r\n          <li class=\"c-header-nav-item d-md-down-none mx-2\"><a class=\"c-header-nav-link\" href=\"#\"> </a>\r\n        </li>\r\n       \r\n       \r\n          <li class=\"c-header-nav-item d-md-down-none mx-2\"><a class=\"c-header-nav-link\" href=\"#\">\r\n              <svg class=\"c-icon\">\r\n              \r\n              </svg></a></li>\r\n          <li class=\"c-header-nav-item d-md-down-none mx-2\"><a class=\"c-header-nav-link\" href=\"#\">\r\n             </a></li>\r\n         \r\n          <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to='/Login'>\r\n                  <span className=\"no-icon\">Log out</span>\r\n                </Link>\r\n              </li>\r\n        </ul>\r\n  </header>\r\n  <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to='/Login'>\r\n                  <span className=\"no-icon\">Log out</span>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../assets/css/Search.css'\r\nimport Login from \"../dashboard/Login\";\r\nimport \"../../assets/css/style.css\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg \" color-on-scroll=\"500\">\r\n        <div className=\"container-fluid\">\r\n   \r\n  \r\n        <div class=\"boxx\">\r\n        <button class=\"c-header-toggler c-class-toggler mfs-3 d-md-down-none\" type=\"button\" data-target=\"#sidebar\" data-class=\"c-sidebar-lg-show\" responsive=\"true\">\r\n<svg class=\"c-icon c-icon-lg\">\r\n\r\n</svg>\r\n</button>\r\n   \r\n\r\n \r\n\r\n </div>\r\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to='/Login'>\r\n                  <span className=\"no-icon\">Log out</span>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n  \r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n//import Data from './Data'\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"footer-master\">\r\n        \r\n            \r\n           \r\n         <h>© 2021 masterkoder</h>\r\n        \r\n          \r\n          </div>\r\n        \r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Employeelist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deleteEmployee(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\"+EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            // check for error response\r\n            if (!response.ok) {\r\n                // get error message from body or default to response status\r\n                const error = (data && data.message) || response.status;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({\r\n                employees: employees.filter(employee => employee.Id !== EmpId)\r\n            });\r\n            alert('Delete successful');\r\n        })\r\n        .catch(error => {\r\n            alert('There was an error!');\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0 || employeeslist == '') {\r\n            return (\r\n            <div>\r\n                <div class=\"cardd\">\r\n                <div class=\"card-body\">\r\n                <div id=\"table\" class=\"table-editable\">\r\n                <h2>Employees List</h2>\r\n                <Link variant=\"primary\" to=\"./dashboard/Addemployee\">Add Employee</Link>\r\n                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                <Table className=\"table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>EmpID</th>\r\n                            <th>Name</th>\r\n                            <th>Salary</th>\r\n                            <th>Address</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employeeslist.map(emp => (\r\n                            <tr key={emp.Id}>\r\n                                <td>{emp.Id}</td>\r\n                                <td>{emp.EmployeeName}</td>\r\n                                <td>{emp.EmployeeSalary}</td>\r\n                                <td>{emp.Adress}</td>\r\n                                <td>\r\n                                    <Link variant=\"info\" to={\"/editemployee/\" + emp.Id}>Edit</Link>\r\n                                    \r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deleteEmployee(emp.Id)}>Delete</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (<div>No Record Found</div>)\r\n        }\r\n    }\r\n}\r\nexport default Employeelist;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Editemployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary:result.EmployeeSalary,\r\n                            employeeAddress:result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    UpdateEmployee() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Employee</h1>\r\n                <Link variant=\"primary\" to=\"/\">View Employee list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.UpdateEmployee()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editemployee;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addemployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    AddEmployee() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Employee</h1>\r\n                <Link variant=\"primary\" to=\"/\">View Employee list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.AddEmployee()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addemployee;","\r\n//import './App.css';\r\nimport Employeelist from \"../dashboard/Employeelist\";\r\nimport Editemployee from \"../dashboard/Editemployee\";\r\nimport Addemployee from \"../dashboard/Addemployee\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import '../../assets/css/data2.css'\r\nfunction Data2() {\r\n  return (\r\n    <div className=\"container body-content\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"../others-scrap/Data2\" exact component={Employeelist} />\r\n              <Route path=\"../dashboard/editemployee/:id\" exact component={Editemployee} />\r\n              <Route path=\"../dashboard/addemployee\" exact component={Addemployee} />\r\n            </Switch>\r\n          </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Data2;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*import React from 'react'\r\n//import './Data2.css';\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport Form from './Form'\r\nimport Popup from 'reactjs-popup';\r\nimport Edit from './Edit'\r\nconst Data2 = () => {\r\n\r\n    return (\r\n        <div>\r\n           \r\n<div class=\"cardd\">\r\n  \r\n  <div class=\"card-body\">\r\n    <div id=\"table\" class=\"table-editable\">\r\n    \r\n      <span class=\"table-add float-right mb-3 mr-2\">\r\n     \r\n      \r\n        <Link to='/Form' className=\"btn btn-danger btn-rounded btn-sm my-0\">\r\n             Create\r\n            </Link>\r\n          </span>\r\n      <table class=\"table table-bordered table-responsive-md table-striped text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th class=\"text-center\">Person Name</th>\r\n            <th class=\"text-center\">Age</th>\r\n            <th class=\"text-center\">Company Name</th>\r\n            <th class=\"text-center\">Country</th>\r\n            <th class=\"text-center\">City</th>\r\n            <th class=\"text-center\">Sort</th>\r\n            <th class=\"text-center\">Remove</th>\r\n            <th class=\"text-center\">Edit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td >Aurelia Vega</td>\r\n            <td >30</td>\r\n            <td>Deepends</td>\r\n            <td >Spain</td>\r\n            <td >Madrid</td>\r\n            <td class=\"pt-3-half\">\r\n              <span class=\"table-up\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-up\"\r\n                    aria-hidden=\"true\"></i></a></span>\r\n              <span class=\"table-down\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-down\"\r\n                    aria-hidden=\"true\"></i></a></span>\r\n            </td>\r\n            <td>\r\n        \r\n              <span class=\"table-remove\">   <button type = \"button\" class= \"btn btn-danger btn-rounded btn-sm my-0\"> Remove</button> \r\n  </span>\r\n            </td>\r\n            <td>\r\n              <span class=\"table-remove\"><Link to='/Edit' className=\"btn btn-danger btn-rounded btn-sm my-0\">\r\n             Edit\r\n            </Link></span>\r\n            </td>\r\n          </tr>\r\n         \r\n          <tr>\r\n            <td class=\"pt-3-half\" >Guerra Cortez</td>\r\n            <td class=\"pt-3-half\" >45</td>\r\n            <td class=\"pt-3-half\" >Insectus</td>\r\n            <td class=\"pt-3-half\" >USA</td>\r\n            <td class=\"pt-3-half\" >San Francisco</td>\r\n            <td class=\"pt-3-half\">\r\n              <span class=\"table-up\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-up\"\r\n                    aria-hidden=\"true\"></i></a></span>\r\n              <span class=\"table-down\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-down\"\r\n                    aria-hidden=\"true\"></i></a></span>\r\n            </td>\r\n            <td>\r\n            <span class=\"table-remove\">    <button type = \"button\" class= \"btn btn-danger btn-rounded btn-sm my-0\"> Remove</button></span>\r\n            </td>\r\n            <td>\r\n            <span class=\"table-remove\"><Link to='/Edit' className=\"btn btn-danger btn-rounded btn-sm my-0\">\r\n             Edit\r\n            </Link></span>\r\n            </td>\r\n          </tr>\r\n          \r\n          <tr>\r\n            <td class=\"pt-3-half\" >Guadalupe House</td>\r\n            <td class=\"pt-3-half\" >26</td>\r\n            <td class=\"pt-3-half\" >Isotronic</td>\r\n            <td class=\"pt-3-half\" >Germany</td>\r\n            <td class=\"pt-3-half\" >Frankfurt am Main</td>\r\n            <td class=\"pt-3-half\">\r\n              <span class=\"table-up\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-up\"\r\n                    aria-hidden=\"true\"></i></a></span>\r\n              <span class=\"table-down\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-down\"\r\n                    aria-hidden=\"true\"></i></a></span>\r\n            </td>\r\n            <td>\r\n            <span class=\"table-remove\">    <button type = \"button\" class= \"btn btn-danger btn-rounded btn-sm my-0\"> Remove</button>  \r\n  </span>\r\n            </td>\r\n            <td>\r\n              <span class=\"table-remove\">  <Link to='/Edit' className=\"btn btn-danger btn-rounded btn-sm my-0\">\r\n  Edit\r\n </Link>\r\n                </span>\r\n            </td>\r\n          </tr>\r\n         \r\n         \r\n          <tr class=\"hide\">\r\n            <td class=\"pt-3-half\" >Elisa Gallagher</td>\r\n            <td class=\"pt-3-half\" >31</td>\r\n            <td class=\"pt-3-half\" >Portica</td>\r\n            <td class=\"pt-3-half\" >United Kingdom</td>\r\n            <td class=\"pt-3-half\" >London</td>\r\n            <td class=\"pt-3-half\">\r\n              <span class=\"table-up\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-up\"\r\n                    aria-hidden=\"true\"></i></a></span>\r\n              <span class=\"table-down\"><a href=\"#!\" class=\"indigo-text\"><i class=\"fas fa-long-arrow-alt-down\"\r\n                    aria-hidden=\"true\"></i></a></span>\r\n            </td>\r\n            <td>\r\n            <span class=\"table-remove\">   <button type = \"button\" class= \"btn btn-danger btn-rounded btn-sm my-0\"> Remove</button>\r\n    \r\n </span>\r\n            </td>\r\n            <td>\r\n            <span class=\"table-remove\"><Link to='/Edit' className=\"btn btn-danger btn-rounded btn-sm my-0\">\r\n             Edit\r\n            </Link></span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Data2*/}\r\n","import React, { Component } from 'react'\r\nimport Data2 from '../others-scrap/Data2'\r\n\r\nimport Employeelist from '../dashboard/Employeelist'\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return <div>\r\n    \r\n     <Employeelist />\r\n  </div> \r\n  }\r\n}\r\n\r\nexport default Dashboard","export default __webpack_public_path__ + \"static/media/face-3.62232de2.jpg\";","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  CreateForm,\r\n  UpdateForm,\r\n  DeleteForm\r\n} from \"react-crud-table\";\r\n\r\n// Component's Base CSS\r\n//import \"./Newcr.css\";\r\nimport '../../assets/css/Salesc.css'\r\n\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\n\r\nlet tasks = [\r\n  {\r\n    id: 1,\r\n    title: \"st xaviers\",\r\n    description: \"Create an example of how to use the component\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"poorna patel\",\r\n    description: \"Improve the component!\"\r\n  }\r\n  \r\n];\r\n\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n  const mapper = x => x[data.field];\r\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n\r\n  if (data.field === \"id\") {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  } else {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n\r\n  return sorter;\r\n};\r\n\r\nlet count = tasks.length;\r\nconst service = {\r\n  fetchItems: payload => {\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result);\r\n  },\r\n  create: task => {\r\n    count += 1;\r\n    tasks.push({\r\n      ...task,\r\n      id: count\r\n    });\r\n    return Promise.resolve(task);\r\n  },\r\n  update: data => {\r\n    const task = tasks.find(t => t.id === data.id);\r\n    task.title = data.title;\r\n    task.description = data.description;\r\n    return Promise.resolve(task);\r\n  },\r\n  delete: data => {\r\n    const task = tasks.find(t => t.id === data.id);\r\n    tasks = tasks.filter(t => t.id !== task.id);\r\n    return Promise.resolve(task);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\" }\r\n};\r\n\r\nconst Userc = () => (\r\n  <div style={styles.container}>\r\n    <CRUDTable\r\n      caption=\"Users\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n\r\n      <Fields>\r\n        <Field name=\"id\" label=\"Id\" hideInCreateForm />\r\n        <Field name=\"title\" label=\"Title\" placeholder=\"Title\" />\r\n        <Field\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          render={DescriptionRenderer}\r\n        />\r\n      </Fields>\r\n      <CreateForm\r\n        title=\"Task Creation\"\r\n        message=\"Create a new task!\"\r\n        trigger=\"Add user\"\r\n        onSubmit={task => service.create(task)}\r\n        submitText=\"Create\"\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.title) {\r\n            errors.title = \"Please, provide task's title\";\r\n          }\r\n\r\n          if (!values.description) {\r\n            errors.description = \"Please, provide task's description\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n\r\n      <UpdateForm\r\n        title=\"Task Update Process\"\r\n        message=\"Update task\"\r\n        trigger=\"Update\"\r\n        onSubmit={task => service.update(task)}\r\n        submitText=\"Update\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.id) {\r\n            errors.id = \"Please, provide id\";\r\n          }\r\n\r\n          if (!values.title) {\r\n            errors.title = \"Please, provide task's title\";\r\n          }\r\n\r\n          if (!values.description) {\r\n            errors.description = \"Please, provide task's description\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n\r\n      <DeleteForm\r\n        title=\"Task Delete Process\"\r\n        message=\"Are you sure you want to delete the task?\"\r\n        trigger=\"Delete\"\r\n        onSubmit={task => service.delete(task)}\r\n        submitText=\"Delete\"\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.id) {\r\n            errors.id = \"Please, provide id\";\r\n          }\r\n          return errors;\r\n        }}\r\n      />\r\n    </CRUDTable>\r\n  </div>\r\n);\r\n\r\n\r\nexport default Userc\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport face3 from \"../../assets/img/faces/face-3.jpg\";\r\nimport Userc from '../others-scrap/Userc';\r\n//import { BrowserRouter, NavLink, Link, Route, Router } from \"react-router-dom\";\r\nimport \"../../assets/css/Cards.css\";\r\n\r\nclass User extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      \r\n      <div class=\"cards-list\">\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./lectures/Lecture\">Live lecture</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./projects/project\">Project</Link>\r\n            </p>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./mcqs/mcq\">MCQ</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p><Link to=\"/\">Study Material</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"/Sales\">Exams</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport { BrowserRouter, NavLink, Link, Route, Router } from \"react-router-dom\";\r\n//import \"../../assets/css/Cards.css\";\r\nimport '../../assets/css/bootstrap.min.css'\r\nconst Cards = () => {\r\n  return (\r\n    <div>\r\n      <div class=\"cards-list\">\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./journey/journey\">Learning Journey</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./courses/course\">Courses</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./batches/batch\">Batches</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div class=\"cards-list\">\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./lectures/Lecture\">Live lecture</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./project/project\">Project</Link>\r\n            </p>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./mcqs/mcq\">MCQ</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p><Link to=\"./qna/qna\">QNA</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"/Sales\">Exams</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div class=\"cards-list\">\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n          <p><Link to=\"/\">Categories</Link></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div class=\"cards-list\">\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./pdf/pdf\">PDFs</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"/Sales\">Exams</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card 1\">\r\n          <div class=\"card_image\"> </div>\r\n          <div class=\"card_title\">\r\n            <p>\r\n              <Link to=\"./videos/videos\">Videos</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import  React from 'react'\r\n//import Data2 from './Data2'\r\nimport Cards from '../dashboard/Cards'\r\nconst Manage = () => {\r\n    return (\r\n        <div>   \r\n<Cards />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Manage\r\n","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  CreateForm,\r\n  UpdateForm,\r\n  DeleteForm\r\n} from \"react-crud-table\";\r\n\r\n// Component's Base CSS\r\nimport '../../assets/css/Salesc.css'\r\n\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\n\r\nlet tasks = [\r\n  {\r\n    id: 1,\r\n    title: \"st xaviers\",\r\n    description: \"Create an example of how to use the component\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"poorna patel\",\r\n    description: \"Improve the component!\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"st xaviers\",\r\n    description: \"Create an example of how to use the component\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"poorna patel\",\r\n    description: \"Improve the component!\"\r\n  }\r\n];\r\n\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n  const mapper = x => x[data.field];\r\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n\r\n  if (data.field === \"id\") {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  } else {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n\r\n  return sorter;\r\n};\r\n\r\nlet count = tasks.length;\r\nconst service = {\r\n  fetchItems: payload => {\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result);\r\n  },\r\n  create: task => {\r\n    count += 1;\r\n    tasks.push({\r\n      ...task,\r\n      id: count\r\n    });\r\n    return Promise.resolve(task);\r\n  },\r\n  update: data => {\r\n    const task = tasks.find(t => t.id === data.id);\r\n    task.title = data.title;\r\n    task.description = data.description;\r\n    return Promise.resolve(task);\r\n  },\r\n  delete: data => {\r\n    const task = tasks.find(t => t.id === data.id);\r\n    tasks = tasks.filter(t => t.id !== task.id);\r\n    return Promise.resolve(task);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\", height: \"60%\" }\r\n};\r\n\r\nconst Salesc = () => (\r\n  <div style={styles.container}>\r\n    <CRUDTable\r\n      caption=\"Sales\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n     \r\n      <CreateForm\r\n        title=\"payment\"\r\n        message=\"Create a new payment!\"\r\n        styles= {styles.container}\r\n        trigger=\"Create a payment\" \r\n        onSubmit={task => service.create(task)}\r\n        submitText=\"Create\"\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.title) {\r\n            errors.title = \"Please, provide task's title\";\r\n          }\r\n          if (!values.title) {\r\n            errors.title = \"Please, provide school name\";\r\n          }\r\n\r\n          if (!values.description) {\r\n            errors.description = \"Please, provide task's description\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n      <Fields>\r\n        <Field name=\"id\" label=\"Id\" hideInCreateForm />\r\n        \r\n       \r\n        <Field name=\"title\" label=\"Title\" placeholder=\"Title\" />\r\n        <Field\r\n        \r\n          name=\"description\"\r\n          label=\"Description\"\r\n          render={DescriptionRenderer}\r\n        />\r\n        \r\n       \r\n       \r\n      </Fields>\r\n     {/*} <CreateForm\r\n        title=\"payment\"\r\n        message=\"Create a new payment!\"\r\n        styles= {styles.container}\r\n        trigger=\"Create a payment\" \r\n        onSubmit={task => service.create(task)}\r\n        submitText=\"Create\"\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.title) {\r\n            errors.title = \"Please, provide task's title\";\r\n          }\r\n          if (!values.title) {\r\n            errors.title = \"Please, provide school name\";\r\n          }\r\n\r\n          if (!values.description) {\r\n            errors.description = \"Please, provide task's description\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      />*/}\r\n\r\n      {/*<UpdateForm\r\n        title=\"Task Update Process\"\r\n        message=\"Update task\"\r\n        trigger=\"Update\"\r\n        onSubmit={task => service.update(task)}\r\n        submitText=\"Update\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.id) {\r\n            errors.id = \"Please, provide id\";\r\n          }\r\n\r\n          if (!values.title) {\r\n            errors.title = \"Please, provide task's title\";\r\n          }\r\n\r\n          if (!values.description) {\r\n            errors.description = \"Please, provide task's description\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n    />*/}\r\n\r\n      {/*<DeleteForm\r\n        title=\"Task Delete Process\"\r\n        message=\"Are you sure you want to delete the task?\"\r\n        trigger=\"Delete\"\r\n        onSubmit={task => service.delete(task)}\r\n        submitText=\"Delete\"\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.id) {\r\n            errors.id = \"Please, provide id\";\r\n          }\r\n          return errors;\r\n        }}\r\n    />*/}\r\n    </CRUDTable>\r\n   \r\n  </div>\r\n);\r\n\r\n\r\nexport default Salesc\r\n\r\n","import React from 'react'\r\nimport Salesc from '../others-scrap/Salesc'\r\nconst Sales = () => {\r\n    return (\r\n        <div>\r\n       <Salesc /> \r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sales\r\n","import React from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\n//import \"../../assets/css/style.css\";\r\nimport '../../assets/css/light-bootstrap-dashboard.css'\r\nimport { Link , NavLink} from 'react-router-dom'\r\nimport { FaBuffer , FaAirFreshener,FaUserCircle,FaSellcast,  } from 'react-icons/fa';\r\n//import '../../assets/css/Tog.css';\r\nimport { BsFillGrid3X3GapFill } from \"react-icons/bs\";\r\nexport default (props) => {\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    \r\n\r\n    <input type=\"checkbox\" class=\"openSidebarMenu\" id=\"openSidebarMenu\"/>\r\n  <label for=\"openSidebarMenu\" class=\"sidebarIconToggle\">\r\n    <div class=\"spinner diagonal part-1\"></div>\r\n    <div class=\"spinner horizontal\"></div>\r\n    <div class=\"spinner diagonal part-2\"></div>\r\n  </label>\r\n    \r\n  <div id=\"sidebarMenu\">\r\n      <ul class=\"sidebarMenuInnerr\">\r\n    \r\n            <li>\r\n            <NavLink  to=\"/dashboard\">\r\n            <FaBuffer /> \r\n              Dashboard\r\n              </NavLink>\r\n            </li>\r\n        \r\n            <li >\r\n              <NavLink  to=\"/sales\">\r\n                \r\n               <FaSellcast />\r\n                Sales\r\n              </NavLink>\r\n            </li>\r\n            <li >\r\n              <NavLink to=\"/manage\">\r\n              < BsFillGrid3X3GapFill/>\r\n                Manage\r\n              </NavLink>\r\n            </li>\r\n            <li >\r\n              <NavLink to=\"/profile\">\r\n              <FaUserCircle />\r\n                user\r\n              </NavLink>\r\n            </li>\r\n            \r\n          \r\n          </ul>\r\n          </div>\r\n    </div>\r\n   \r\n    \r\n      );\r\n    };\r\n    {\r\n      /*import React, { Component } from 'react'\r\n    import { NavLink, Link } from 'react-router-dom'\r\n    \r\n    class Sidebar extends Component {\r\n      render() {\r\n        return (\r\n          <div className=\"sidebar\">\r\n            <div className=\"sidebar-wrapper\">\r\n              <div className=\"logo\">\r\n                <Link to='/' className=\"simple-text\">\r\n                  MasterKoder\r\n                </Link>\r\n              </div>\r\n              <ul className=\"nav\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to='/dashboard'>\r\n                    <i className=\"nc-icon nc-chart-pie-35\"></i>\r\n                    <p>Dashboard</p>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to='/profile'>\r\n                    <i className=\"nc-icon nc-circle-09\"></i>\r\n                    <p>User </p>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to='/Manage'>\r\n                  <i className=\"nc-icon nc-chart-pie-35\"></i>\r\n                    <p>Manage</p>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to='/Sales'>\r\n                    <i className=\"nc-icon nc-circle-09\"></i>\r\n                    <p>Sales</p>\r\n                  </NavLink>\r\n                </li>\r\n    \r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    \r\n    export default Sidebar*/\r\n    }\r\n    \r\n\r\n","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Batch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deletebatch(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\" + EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                this.setState({\r\n                    employees: employees.filter(employee => employee.Id !== EmpId)\r\n                });\r\n                alert('Delete successful');\r\n            })\r\n            .catch(error => {\r\n                alert('There was an error!');\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0) {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\">\r\n                                <h2>Batch List</h2>\r\n                                <Link variant=\"primary\" to=\"/batches/addbatch\">Add Batch</Link>\r\n                                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                                <Table className=\"table\" >\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>EmpID</th>\r\n                                            <th>Name</th>\r\n                                            <th>Salary</th>\r\n                                            <th>Address</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {employeeslist.map(emp => (\r\n                                            <tr key={emp.Id}>\r\n                                                <td>{emp.Id}</td>\r\n                                                <td>{emp.EmployeeName}</td>\r\n                                                <td>{emp.EmployeeSalary}</td>\r\n                                                <td>{emp.Adress}</td>\r\n                                                <td>\r\n                                                    <Link variant=\"info\" to={\"/batches/editbatch/\" + emp.Id}>Edit</Link>\r\n\r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deletebatch(emp.Id)}>Delete</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/batches/addbatch\">Add Batch</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Batch;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Course extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deletecourse(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\"+EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            // check for error response\r\n            if (!response.ok) {\r\n                // get error message from body or default to response status\r\n                const error = (data && data.message) || response.status;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({\r\n                employees: employees.filter(employee => employee.Id !== EmpId)\r\n            });\r\n            alert('Delete successful');\r\n        })\r\n        .catch(error => {\r\n            alert('There was an error!');\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0) {\r\n            return (\r\n            <div>\r\n                <div class=\"cardd\">\r\n                <div class=\"card-body\">\r\n                <div id=\"table\" class=\"table-editable\">\r\n                <h2>Courses List</h2>\r\n                <Link variant=\"primary\" to=\"/courses/addcourse\">Add Course</Link>\r\n                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                <Table className=\"table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>EmpID</th>\r\n                            <th>Name</th>\r\n                            <th>Salary</th>\r\n                            <th>Address</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employeeslist.map(emp => (\r\n                            <tr key={emp.Id}>\r\n                                <td>{emp.Id}</td>\r\n                                <td>{emp.EmployeeName}</td>\r\n                                <td>{emp.EmployeeSalary}</td>\r\n                                <td>{emp.Adress}</td>\r\n                                <td>\r\n                                    <Link variant=\"info\" to={\"/courses/editcourse/\" + emp.Id}>Edit</Link>\r\n                                    \r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deletecourse(emp.Id)}>Delete</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/courses/addcourse\">Add Course</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Course;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Journey extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deletejourney(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\" + EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                this.setState({\r\n                    employees: employees.filter(employee => employee.Id !== EmpId)\r\n                });\r\n                alert('Delete successful');\r\n            })\r\n            .catch(error => {\r\n                alert('There was an error!');\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0) {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\">\r\n                                <h2>Journey List</h2>\r\n                                <Link variant=\"primary\" to=\"/journey/addjourney\">Add Journey</Link>\r\n                                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                                <Table className=\"table\" >\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>EmpID</th>\r\n                                            <th>Name</th>\r\n                                            <th>Salary</th>\r\n                                            <th>Address</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {employeeslist.map(emp => (\r\n                                            <tr key={emp.Id}>\r\n                                                <td>{emp.Id}</td>\r\n                                                <td>{emp.EmployeeName}</td>\r\n                                                <td>{emp.EmployeeSalary}</td>\r\n                                                <td>{emp.Adress}</td>\r\n                                                <td>\r\n                                                    <Link variant=\"info\" to={\"/journey/editjourney/\" + emp.Id}>Edit</Link>\r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deletejourney(emp.Id)}>Delete</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/journey/addjourney\">Add Journey</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Journey;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Lecture extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deletelecture(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\"+EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            // check for error response\r\n            if (!response.ok) {\r\n                // get error message from body or default to response status\r\n                const error = (data && data.message) || response.status;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({\r\n                employees: employees.filter(employee => employee.Id !== EmpId)\r\n            });\r\n            alert('Delete successful');\r\n        })\r\n        .catch(error => {\r\n            alert('There was an error!');\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0) {\r\n            return (\r\n            <div>\r\n                <div class=\"cardd\">\r\n                <div class=\"card-body\">\r\n                <div id=\"table\" class=\"table-editable\">\r\n                <h2>Lecture List</h2>\r\n                <Link variant=\"primary\" to=\"/lectures/addLecture\">Add Lecture</Link>\r\n                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                <Table className=\"table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>EmpID</th>\r\n                            <th>Name</th>\r\n                            <th>Salary</th>\r\n                            <th>Address</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employeeslist.map(emp => (\r\n                            <tr key={emp.Id}>\r\n                                <td>{emp.Id}</td>\r\n                                <td>{emp.EmployeeName}</td>\r\n                                <td>{emp.EmployeeSalary}</td>\r\n                                <td>{emp.Adress}</td>\r\n                                <td>\r\n                                    <Link variant=\"info\" to={\"/lectures/editlecture/\" + emp.Id}>Edit</Link>\r\n                                    \r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deletelecture(emp.Id)}>Delete</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n            <div>\r\n                <div class=\"cardd\">\r\n                    <div class=\"card-body\">\r\n                        <div id=\"table\" class=\"table-editable\"></div>\r\n                        <h2>No Record Found</h2>\r\n                        <Link variant=\"primary\" to=\"/lectures/addlecture\">Add Lecture</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Lecture;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Mstjourney extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deletemstjourney(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\"+EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            // check for error response\r\n            if (!response.ok) {\r\n                // get error message from body or default to response status\r\n                const error = (data && data.message) || response.status;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({\r\n                employees: employees.filter(employee => employee.Id !== EmpId)\r\n            });\r\n            alert('Delete successful');\r\n        })\r\n        .catch(error => {\r\n            alert('There was an error!');\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0) {\r\n            return (\r\n            <div>\r\n                <div class=\"cardd\">\r\n                <div class=\"card-body\">\r\n                <div id=\"table\" class=\"table-editable\">\r\n                <h2>Master Journey List</h2>\r\n                <Link variant=\"primary\" to=\"/master-journey/addmstjourney\">Add Master Journey</Link>\r\n                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                <Table className=\"table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>EmpID</th>\r\n                            <th>Name</th>\r\n                            <th>Salary</th>\r\n                            <th>Address</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employeeslist.map(emp => (\r\n                            <tr key={emp.Id}>\r\n                                <td>{emp.Id}</td>\r\n                                <td>{emp.EmployeeName}</td>\r\n                                <td>{emp.EmployeeSalary}</td>\r\n                                <td>{emp.Adress}</td>\r\n                                <td>\r\n                                    <Link variant=\"info\" to={\"/master-journey/editmstjourney/\" + emp.Id}>Edit</Link>\r\n                                    \r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deletemstjourney(emp.Id)}>Delete</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/master-journey/addmstjourney\">Add Master Journey</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Mstjourney;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Bootstrap and jQuery libraries\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../../node_modules/jquery/dist/jquery.min.js';\r\n\r\nimport $ from 'jquery';\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Mcq extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            mcqs: [],\r\n            datas: [],\r\n            cols: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        //init Datatable\r\n        setTimeout(() => {\r\n            $('#tblmcq').DataTable(\r\n                {\r\n                    \"lengthMenu\": [[5, 10, 15, -1], [5, 10, 15, \"All\"]],\r\n                    \"bDestroy\": true\r\n                }\r\n            );\r\n        }, 1000);\r\n\r\n        fetch(BaseapiUrl + '/api/v1/web/mcq?skip=0&limit=100&search=&column=1&order=asc')\r\n            .then((resp) => {\r\n                resp.json()\r\n                    .then((result) => {\r\n                        console.warn(result.data.mcq);\r\n                        this.setState({\r\n                            mcqs: result.data.mcq,\r\n                            datas: result.data.rows,\r\n                            cols: result.data.cols\r\n                        });\r\n                    })\r\n            });\r\n    }\r\n\r\n    deletemcq(McqId) {\r\n        debugger;\r\n        const { mcqs } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/v1/web/mcq/\" + McqId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                this.setState({\r\n                    mcqs: mcqs.filter(mcq => mcq._id !== McqId)\r\n                });\r\n                alert('Delete successful');\r\n            })\r\n            .catch(error => {\r\n                alert('There was an error!');\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        var mcqslist = this.state.mcqs;\r\n        debugger;\r\n        if (mcqslist && mcqslist.length > 0) {\r\n            return (\r\n                <div>\r\n                    <div className=\"container-fluid\">\r\n                        <h2>Mcq List</h2>\r\n                        <Link variant=\"primary\" to=\"/mcqs/addmcq\">Add Mcq</Link>\r\n                        {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                        <Table id=\"tblmcq\" className=\"table table-striped table-bordered dt-responsive nowrap\" style={{ width: \"100%\" }} >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Mcqid</th>\r\n                                    <th>Name</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {mcqslist.map(mcq => (\r\n                                    <tr key={mcq._id}>\r\n                                        <td>{mcq._id}</td>\r\n                                        <td>{mcq.name}</td>\r\n                                        <td>\r\n                                            <Link variant=\"info\" to={\"/mcqs/editmcq/\" + mcq._id}><i className=\"fa fa-edit\"></i></Link>\r\n                                            <Button variant=\"danger\" style={{ border: \"none\" }} onClick={() => this.deletemcq(mcq._id)}><i className=\"fa fa-trash\"></i></Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/mcqs/addmcq\">Add Mcq</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Mcq;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Bootstrap and jQuery libraries\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../../node_modules/jquery/dist/jquery.min.js';\r\n\r\nimport $ from 'jquery';\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Pdf extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pdfs: [],\r\n            datas: [],\r\n            cols: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        //init Datatable  \r\n        setTimeout(() => {\r\n            $('#tblpdf').DataTable(\r\n                {\r\n                    \"lengthMenu\": [[5, 10, 15, -1], [5, 10, 15, \"All\"]],\r\n                    \"bDestroy\": true\r\n                }\r\n            );\r\n        }, 1000);\r\n\r\n        fetch(BaseapiUrl + '/api/v1/web/pdf?skip=0&limit=100&search=&column=1&order=desc')\r\n            .then((resp) => {\r\n                resp.json()\r\n                    .then((result) => {\r\n                        console.warn(result.data.pdf);\r\n                        this.setState({\r\n                            pdfs: result.data.pdf,\r\n                            datas: result.data.rows,\r\n                            cols: result.data.cols\r\n                        });\r\n                    })\r\n            });\r\n    }\r\n\r\n    deletepdf(PdfId) {\r\n        debugger;\r\n        const { pdfs } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/v1/web/pdf/\" + PdfId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                this.setState({\r\n                    pdfs: pdfs.filter(pdf => pdf._id !== PdfId)\r\n                });\r\n                alert('Delete successful');\r\n            })\r\n            .catch(error => {\r\n                alert('There was an error!');\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        var pdflist = this.state.pdfs;\r\n        debugger;\r\n        if (pdflist && pdflist.length > 0) {\r\n            return (\r\n                <div>\r\n                    <div class=\"container-fluid\">\r\n                        <h2>Pdf List</h2>\r\n                        <Link variant=\"primary\" to=\"/pdf/addpdf\">Add Pdf</Link>\r\n                        {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                        <Table id=\"tblpdf\" className=\"table table-striped table-bordered dt-responsive nowrap\" style={{width:\"100%\"}} >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Link</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {pdflist.map(pdf => (\r\n                                    <tr key={pdf._id}>\r\n                                        <td>{pdf.name}</td>\r\n                                        <td>{pdf.link}</td>\r\n                                        <td>\r\n                                            <Link variant=\"info\" to={\"/pdf/editpdf/\" + pdf._id}><i className=\"fa fa-edit\"></i></Link>\r\n                                            <Button variant=\"danger\" style={{ border: \"none\" }} onClick={() => this.deletepdf(pdf._id)}><i className=\"fa fa-trash\"></i></Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/pdf/addpdf\">Add Pdf</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Pdf;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Bootstrap and jQuery libraries\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../../node_modules/jquery/dist/jquery.min.js';\r\n\r\nimport $ from 'jquery';\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Ppt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ppts: [],\r\n            datas: [],\r\n            cols: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        //init Datatable  \r\n        setTimeout(() => {\r\n            $('#tblppt').DataTable(\r\n                {\r\n                    \"lengthMenu\": [[5, 10, 15, -1], [5, 10, 15, \"All\"]],\r\n                    \"bDestroy\": true\r\n                }\r\n            );\r\n        }, 1000);\r\n\r\n        fetch(BaseapiUrl + '/api/v1/web/ppt?skip=0&limit=100&search=&column=1&order=desc')\r\n            .then((resp) => {\r\n                resp.json()\r\n                    .then((result) => {\r\n                        console.warn(result.data.Ppt);\r\n                        this.setState({\r\n                            ppts: result.data.Ppt,\r\n                            datas: result.data.rows,\r\n                            cols: result.data.cols\r\n                        });\r\n                    })\r\n            });\r\n    }\r\n\r\n    deleteppt(PptId) {\r\n        debugger;\r\n        const { ppts } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/v1/web/ppt/\" + PptId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                this.setState({\r\n                    ppts: ppts.filter(ppt => ppt._id !== PptId)\r\n                });\r\n                alert('Delete successful');\r\n            })\r\n            .catch(error => {\r\n                alert('There was an error!');\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        var pptslist = this.state.ppts;\r\n        debugger;\r\n        if (pptslist && pptslist.length > 0) {\r\n            return (\r\n                <div>\r\n                    <div class=\"container-fluid\">\r\n                        <h2>Ppt List</h2>\r\n                        <Link variant=\"primary\" to=\"/ppt/addppt\">Add Ppt</Link>\r\n                        {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                        <Table id=\"tblppt\" className=\"table table-striped table-bordered dt-responsive nowrap\" style={{ width: \"100%\" }} >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Link</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {pptslist.map(ppt => (\r\n                                    <tr key={ppt._id}>\r\n                                        <td>{ppt.name}</td>\r\n                                        <td>{ppt.link}</td>\r\n                                        <td>\r\n                                            <Link variant=\"info\" to={\"/ppt/editppt/\" + ppt._id}><i className=\"fa fa-edit\"></i></Link>\r\n                                            <Button variant=\"danger\" style={{ border: \"none\" }} onClick={() => this.deleteppt(ppt._id)}><i className=\"fa fa-trash\"></i></Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/ppt/addppt\">Add PPT</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Ppt;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Project extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deleteproject(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\"+EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            // check for error response\r\n            if (!response.ok) {\r\n                // get error message from body or default to response status\r\n                const error = (data && data.message) || response.status;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({\r\n                employees: employees.filter(employee => employee.Id !== EmpId)\r\n            });\r\n            alert('Delete successful');\r\n        })\r\n        .catch(error => {\r\n            alert('There was an error!');\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0) {\r\n            return (\r\n            <div>\r\n                <div class=\"cardd\">\r\n                <div class=\"card-body\">\r\n                <div id=\"table\" class=\"table-editable\">\r\n                <h2>Projects List</h2>\r\n                <Link variant=\"primary\" to=\"/project/addproject\">Add Project</Link>\r\n                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                <Table className=\"table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>EmpID</th>\r\n                            <th>Name</th>\r\n                            <th>Salary</th>\r\n                            <th>Address</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employeeslist.map(emp => (\r\n                            <tr key={emp.Id}>\r\n                                <td>{emp.Id}</td>\r\n                                <td>{emp.EmployeeName}</td>\r\n                                <td>{emp.EmployeeSalary}</td>\r\n                                <td>{emp.Adress}</td>\r\n                                <td>\r\n                                    <Link variant=\"info\" to={\"/project/editProject/\" + emp.Id}>Edit</Link>\r\n                                    \r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deleteproject(emp.Id)}>Delete</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/project/addproject\">Add Project</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Project;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Student extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deletestudent(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\"+EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            // check for error response\r\n            if (!response.ok) {\r\n                // get error message from body or default to response status\r\n                const error = (data && data.message) || response.status;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({\r\n                employees: employees.filter(employee => employee.Id !== EmpId)\r\n            });\r\n            alert('Delete successful');\r\n        })\r\n        .catch(error => {\r\n            alert('There was an error!');\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0) {\r\n            return (\r\n            <div>\r\n                <div class=\"cardd\">\r\n                <div class=\"card-body\">\r\n                <div id=\"table\" class=\"table-editable\">\r\n                <h2>Student List</h2>\r\n                <Link variant=\"primary\" to=\"/student/addstudent\">Add Student</Link>\r\n                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                <Table className=\"table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>EmpID</th>\r\n                            <th>Name</th>\r\n                            <th>Salary</th>\r\n                            <th>Address</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employeeslist.map(emp => (\r\n                            <tr key={emp.Id}>\r\n                                <td>{emp.Id}</td>\r\n                                <td>{emp.EmployeeName}</td>\r\n                                <td>{emp.EmployeeSalary}</td>\r\n                                <td>{emp.Adress}</td>\r\n                                <td>\r\n                                    <Link variant=\"info\" to={\"/student/editstudent/\" + emp.Id}>Edit</Link>\r\n                                    \r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deletestudent(emp.Id)}>Delete</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/student/addstudent\">Add Student</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Student;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Topic extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deletetopic(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\"+EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            // check for error response\r\n            if (!response.ok) {\r\n                // get error message from body or default to response status\r\n                const error = (data && data.message) || response.status;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({\r\n                employees: employees.filter(employee => employee.Id !== EmpId)\r\n            });\r\n            alert('Delete successful');\r\n        })\r\n        .catch(error => {\r\n            alert('There was an error!');\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0) {\r\n            return (\r\n            <div>\r\n                <div class=\"cardd\">\r\n                <div class=\"card-body\">\r\n                <div id=\"table\" class=\"table-editable\">\r\n                <h2>Topic List</h2>\r\n                <Link variant=\"primary\" to=\"/topics/addtopic\">Add Topic</Link>\r\n                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                <Table className=\"table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>EmpID</th>\r\n                            <th>Name</th>\r\n                            <th>Salary</th>\r\n                            <th>Address</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employeeslist.map(emp => (\r\n                            <tr key={emp.Id}>\r\n                                <td>{emp.Id}</td>\r\n                                <td>{emp.EmployeeName}</td>\r\n                                <td>{emp.EmployeeSalary}</td>\r\n                                <td>{emp.Adress}</td>\r\n                                <td>\r\n                                    <Link variant=\"info\" to={\"/topics/edittopic/\" + emp.Id}>Edit</Link>\r\n                                    \r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deletetopic(emp.Id)}>Delete</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/topics/addtopic\">Add Topic</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Topic;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\n\r\nclass Videos extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            IsApiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + \"/api/Employee/\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    this.setState({\r\n                        employees: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n    deletevideo(EmpId) {\r\n        debugger;\r\n        const { employees } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/Employee?id=\"+EmpId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            // check for error response\r\n            if (!response.ok) {\r\n                // get error message from body or default to response status\r\n                const error = (data && data.message) || response.status;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({\r\n                employees: employees.filter(employee => employee.Id !== EmpId)\r\n            });\r\n            alert('Delete successful');\r\n        })\r\n        .catch(error => {\r\n            alert('There was an error!');\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    render() {\r\n        var employeeslist = this.state.employees;\r\n        debugger;\r\n        if (employeeslist && employeeslist.length > 0) {\r\n            return (\r\n            <div>\r\n                <div class=\"cardd\">\r\n                <div class=\"card-body\">\r\n                <div id=\"table\" class=\"table-editable\">\r\n                <h2>Videos List</h2>\r\n                <Link variant=\"primary\" to=\"/videos/addvideos\">Add Video</Link>\r\n                {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                <Table className=\"table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>EmpID</th>\r\n                            <th>Name</th>\r\n                            <th>Salary</th>\r\n                            <th>Address</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employeeslist.map(emp => (\r\n                            <tr key={emp.Id}>\r\n                                <td>{emp.Id}</td>\r\n                                <td>{emp.EmployeeName}</td>\r\n                                <td>{emp.EmployeeSalary}</td>\r\n                                <td>{emp.Adress}</td>\r\n                                <td>\r\n                                    <Link variant=\"info\" to={\"/videos/editvideos/\" + emp.Id}>Edit</Link>\r\n                                    \r\n                    &nbsp;<Button variant=\"danger\" onClick={() => this.deletevideo(emp.Id)}>Delete</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/videos/addvideos\">Add Video</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Videos;","import React from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Bootstrap and jQuery libraries\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../../node_modules/jquery/dist/jquery.min.js';\r\n\r\nimport $ from 'jquery';\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Qna extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            qnas: [],\r\n            datas: [],\r\n            cols: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        //init Datatable  \r\n        setTimeout(() => {\r\n            $('#tblqna').DataTable(\r\n                {\r\n                    \"lengthMenu\": [[5, 10, 15, -1], [5, 10, 15, \"All\"]],\r\n                    \"bDestroy\": true\r\n                }\r\n            );\r\n        }, 1000);\r\n\r\n        fetch(BaseapiUrl + '/api/v1/web/qna?skip=0&limit=100&search=w&column=1&order=asc')\r\n            .then((resp) => {\r\n                resp.json()\r\n                    .then((result) => {\r\n                        console.warn(result.data.interest);\r\n                        this.setState({\r\n                            qnas: result.data.interest,\r\n                            datas: result.data.rows,\r\n                            cols: result.data.cols\r\n                        });\r\n                    })\r\n            });\r\n    }\r\n\r\n    deleteqna(QnaId) {\r\n        debugger;\r\n        const { qnas } = this.state;\r\n        const apiUrl = BaseapiUrl + \"/api/v1/web/qna/\" + QnaId;\r\n\r\n        fetch(apiUrl, { method: 'DELETE' })\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                this.setState({\r\n                    qnas: qnas.filter(qna => qna._id !== QnaId)\r\n                });\r\n                alert('Delete successful');\r\n            })\r\n            .catch(error => {\r\n                alert('There was an error!');\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        var qnalist = this.state.qnas;\r\n        debugger;\r\n        if (qnalist && qnalist.length > 0) {\r\n            return (\r\n                <div>\r\n                    <div className=\"container-fluid\">\r\n                        <h2>Qna List</h2>\r\n                        <Link variant=\"primary\" to=\"/qna/addqna\">Add Qna</Link>\r\n                        {/* {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>} */}\r\n                        <Table id=\"tblqna\" className=\"table table-striped table-bordered dt-responsive nowrap\" style={{width:\"100%\"}} >\r\n                            <thead>\r\n                                <tr>\r\n                                    {/*<th>QnaID</th>*/}\r\n                                    <th>Question</th>\r\n                                    <th>Options</th>\r\n                                    <th>Answer</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {qnalist.map(qna => (\r\n                                    <tr key={qna._id}>\r\n                                        <td>{qna.question}</td>\r\n                                        <td>{qna.options}</td>\r\n                                        <td>{qna.answer}</td>\r\n                                        <td>\r\n                                            <Link variant=\"success\" to={\"/qna/editqna/\" + qna._id}><i className=\"fa fa-edit\"></i></Link>\r\n                                            <Button variant=\"danger\" style={{ border: \"none\" }} onClick={() => this.deleteqna(qna._id)}><i className=\"fa fa-trash\"></i></Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"cardd\">\r\n                        <div class=\"card-body\">\r\n                            <div id=\"table\" class=\"table-editable\"></div>\r\n                            <h2>No Record Found</h2>\r\n                            <Link variant=\"primary\" to=\"/qna/addqna\">Add Qna</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Qna;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Editbatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary:result.EmployeeSalary,\r\n                            employeeAddress:result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatebatch() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Batch</h1>\r\n                <Link variant=\"primary\" to=\"/batches/batch\">View Batch list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatebatch()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editbatch;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Editcourse extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary:result.EmployeeSalary,\r\n                            employeeAddress:result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatecourse() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Course</h1>\r\n                <Link variant=\"primary\" to=\"/courses/course\">View Course list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatecourse()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editcourse;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Editjourney extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary:result.EmployeeSalary,\r\n                            employeeAddress:result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatejourney() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Journey</h1>\r\n                <Link variant=\"primary\" to=\"/journey/journey\">View Journey list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatejourney()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editjourney;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Editlecture extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary:result.EmployeeSalary,\r\n                            employeeAddress:result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatelecture() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Lecture</h1>\r\n                <Link variant=\"primary\" to=\"/lectures/lecture\">View Lecture list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatelecture()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editlecture;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Editmstjourney  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary:result.EmployeeSalary,\r\n                            employeeAddress:result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatemstjourney() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Master Journey</h1>\r\n                <Link variant=\"primary\" to=\"/master-journey/mstjourney\">View Master Journey list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatemstjourney()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editmstjourney;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Editmcq extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mcqname: '',\r\n            qnaoptionlist: '',\r\n            qnaoptionlistarr: [],\r\n            qna: '',\r\n            status: '',\r\n            isDeleted: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.drpdwnhandleChange = this.drpdwnhandleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        debugger;\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    drpdwnhandleChange(event) {\r\n        debugger;\r\n        const getQnaIdvalue = (Array.isArray(event) ? event.map(x => x.value) : []);\r\n        this.setState({\r\n            qnaoptionlist: getQnaIdvalue\r\n        })\r\n    }\r\n\r\n    componentDidMount(props) {\r\n        var Mcqid = this.props.match.params.id;\r\n        this.GetMcqById(Mcqid);\r\n    }\r\n    GetMcqById(Mcqid) {\r\n        const apiUrl = BaseapiUrl + \"/api/v1/web/mcq/\" + Mcqid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        console.warn(result.data.qna);\r\n                        this.setState({\r\n                            mcqname: result.data.name,\r\n                            qnaoptionlistarr: result.data.qna,\r\n                            qnaoptionlist: result.data.qna\r\n                        });\r\n                        debugger;\r\n                        var preselectedoptions = [...this.state.qnaoptionlistarr];\r\n                        preselectedoptions.forEach(function (file) {\r\n                            file.isFixed = \"true\"\r\n                        })\r\n                        this.setState({\r\n                            qnaoptionlistarr: preselectedoptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatemcq() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id: this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/v1/web/mcq/\" + this.props.match.params._id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        let options = this.state.qnaoptionlistarr.map(function (opt) {\r\n            return { value: opt._id, label: opt.question, isFixed: true };\r\n        });\r\n        return (\r\n            <div>\r\n                <h1>Edit Mcq</h1>\r\n                <Link variant=\"primary\" to=\"/mcqs/mcq\">View Mcq list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"mcqname\">\r\n                                <Form.Label>Mcq Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"mcqname\"\r\n                                    value={this.state.mcqname}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Mcq Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"qnaoptionlist\">\r\n                                <Select\r\n                                    name=\"qnaoptionlist\"\r\n                                    value={this.state.value}\r\n                                    defaultValue={options[0], options[1]}\r\n                                    onChange={this.drpdwnhandleChange}\r\n                                    options={options}\r\n                                    isMulti={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatemcq()}>Update</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editmcq;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Editpdf extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pdfname: '',\r\n            pdflink: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Pdfid = this.props.match.params.id;\r\n        this.GetEmployeeById(Pdfid);\r\n    }\r\n    GetEmployeeById(Pdfid) {\r\n        const apiUrl = BaseapiUrl + \"/api/v1/web/pdf/\" + Pdfid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            pdfname: result.data.name,\r\n                            pdflink: result.data.link\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatepdf() {\r\n        debugger;\r\n        if (this.state.pdfname == \"\" || this.state.pdfname == undefined) {\r\n            alert(\"PDF Name is required\");\r\n        } else if (this.state.pdflink == \"\" || this.state.pdflink == undefined) {\r\n            alert(\"PDF link is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id: this.props.match.params.id,\r\n            name: this.state.pdfname,\r\n            link: this.state.pdflink\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/v1/web/pdf/\" + this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Pdf</h1>\r\n                <Link variant=\"primary\" to=\"/pdf/pdf\">View Pdf list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"pdfname\">\r\n                                <Form.Label>Pdf Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pdfname\"\r\n                                    value={this.state.pdfname}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Pdf Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pdflink\">\r\n                                <Form.Label>Pdf link</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pdflink\"\r\n                                    value={this.state.pdflink}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Pdf link\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatepdf()}>Update</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editpdf;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Editppt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pptname: '',\r\n            pptlink: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Pptid = this.props.match.params.id;\r\n        this.GetEmployeeById(Pptid);\r\n    }\r\n    GetEmployeeById(Pptid) {\r\n        debugger;\r\n        const apiUrl = BaseapiUrl + \"/api/v1/web/ppt/\" + Pptid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        console.log(result);\r\n                        this.setState({\r\n                            pptname: result.data.name,\r\n                            pptlink: result.data.link\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updateppt() {\r\n        debugger;\r\n        if (this.state.pptname == \"\" || this.state.pptname == undefined) {\r\n            alert(\"PPT Name is required\");\r\n        } else if (this.state.pptlink == \"\" || this.state.pptlink == undefined) {\r\n            alert(\"PPT link is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            name: this.state.pptname,\r\n            link: this.state.pptlink\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/v1/web/ppt/\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                    this.setState({\r\n                        pptname: '',\r\n                        pptlink: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Ppt</h1>\r\n                <Link variant=\"primary\" to=\"/ppt/ppt\">View Ppt list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"pptname\">\r\n                                <Form.Label>PPT Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pptname\"\r\n                                    value={this.state.pptname}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"PPT Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pptlink\">\r\n                                <Form.Label>PPT Link</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pptlink\"\r\n                                    value={this.state.pptlink}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"PPT Link\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updateppt()}>Update</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editppt;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Editproject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary:result.EmployeeSalary,\r\n                            employeeAddress:result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updateproject() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Project</h1>\r\n                <Link variant=\"primary\" to=\"/project/project\">View Project list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updateproject()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Editproject;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Editstudent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary:result.EmployeeSalary,\r\n                            employeeAddress:result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatestudent() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Student</h1>\r\n                <Link variant=\"primary\" to=\"/student/student\">View Student list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatestudent()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editstudent;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Edittopic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary:result.EmployeeSalary,\r\n                            employeeAddress:result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatetopic() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id:this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\"+this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Topic</h1>\r\n                <Link variant=\"primary\" to=\"/topics/topic\">View Topic list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatetopic()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Edittopic;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Editvideos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Empid = this.props.match.params.id;\r\n        this.GetEmployeeById(Empid);\r\n    }\r\n    GetEmployeeById(Empid) {\r\n        const apiUrl = BaseapiUrl + \"api/Employee?id=\" + Empid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        this.setState({\r\n                            employeeName: result.EmployeeName,\r\n                            employeeSalary: result.EmployeeSalary,\r\n                            employeeAddress: result.Adress\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"employeee record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updatevideo() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id: this.props.match.params.id,\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee?id=\" + this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Edit Video</h1>\r\n                <Link variant=\"primary\" to=\"/videos/videos\">View Videos list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.Updatevideo()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Editvideos;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Editqna extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question: '',\r\n            optionone: '',\r\n            optiontwo: '',\r\n            optionthree: '',\r\n            optionfour: '',\r\n            options: [],\r\n            answer: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    componentDidMount(props) {\r\n        var Qnaid = this.props.match.params.id;\r\n        this.GetQnaById(Qnaid);\r\n    }\r\n    GetQnaById(Qnaid) {\r\n        debugger;\r\n        const apiUrl = BaseapiUrl + \"/api/v1/web/qna/\" + Qnaid;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        debugger;\r\n                        console.warn(result);\r\n                        this.setState({\r\n                            question: result.data.question,\r\n                            optionone:result.data.options[0],\r\n                            optiontwo:result.data.options[1],\r\n                            optionthree:result.data.options[2],\r\n                            optionfour:result.data.options[3],\r\n                            answer: result.data.answer\r\n                        });\r\n                    }\r\n                    else {\r\n                        alert(\"record not found!\")\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({ IsApiError: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    Updateqna() {\r\n        debugger;\r\n        if (this.state.question == \"\" || this.state.question == undefined) {\r\n            alert(\"question is required\");\r\n        } else if (this.state.optionone == \"\" || this.state.optionone == undefined) {\r\n            alert(\"first option is required\");\r\n        } else if (this.state.optiontwo == \"\" || this.state.optiontwo == undefined) {\r\n            alert(\"second option is required\");\r\n        } else if (this.state.optionthree == \"\" || this.state.optionthree == undefined) {\r\n            alert(\"third option is required\");\r\n        } else if (this.state.optionfour == \"\" || this.state.optionfour == undefined) {\r\n            alert(\"fourth option is required\");\r\n        } else if (this.state.answer == \"\" || this.state.answer == undefined) {\r\n            alert(\"answer is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            Id: this.props.match.params.id,\r\n            question: this.state.question,\r\n            options: [this.state.optionone, this.state.optiontwo, this.state.optionthree, this.state.optionfour],\r\n            answer: this.state.answer\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/v1/web/qna/\" + this.props.match.params.id;\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Updated successfully!\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <h2>Edit Qna</h2>\r\n                    <Link variant=\"primary\" to=\"/qna/qna\">View Qna list</Link>\r\n                </div>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <Row>\r\n                        <Col sm={12}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Label>Question</Form.Label>\r\n                                <Form.Row controlId=\"question\">\r\n                                    <Col sm={3}>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"question\"\r\n                                            value={this.state.question}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter Your Question\" />\r\n                                    </Col>\r\n                                </Form.Row>\r\n\r\n                                <Form.Label>Options</Form.Label>\r\n                                <Form.Row>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"optionone\"\r\n                                            value={this.state.optionone}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter first option\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"optiontwo\"\r\n                                            value={this.state.optiontwo}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter second option\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"optionthree\"\r\n                                            value={this.state.optionthree}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter third option\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"optionfour\"\r\n                                            value={this.state.optionfour}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter fourth option\" />\r\n                                    </Col>\r\n                                </Form.Row>\r\n\r\n                                <Form.Label>Answer</Form.Label>\r\n                                <Form.Row controlId=\"answer\">\r\n                                    <Col sm={3}>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"answer\"\r\n                                            value={this.state.answer}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter Correct Answer\" />\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                <br />\r\n                                <Form.Row controlId=\"btnsubmit\">\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Button variant=\"success\" onClick={() => this.Updateqna()}>Update</Button>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Editqna;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addbatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addbatch() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Batch</h1>\r\n                <Link variant=\"primary\" to=\"/batches/batch\">View Batch list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addbatch()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Addbatch;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addcourse extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addcourse() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Course</h1>\r\n                <Link variant=\"primary\" to=\"/courses/course\">View Course list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addcourse()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Addcourse;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addjourney extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addjourney() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Journey</h1>\r\n                <Link variant=\"primary\" to=\"/journey/journey\">View Journey list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addjourney()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addjourney;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addlecture extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addlecture() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Lecture</h1>\r\n                <Link variant=\"primary\" to=\"/lectures/lecture\">View Lecture list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addlecture()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addlecture;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addmstjourney extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addmstjourney() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Master Journey</h1>\r\n                <Link variant=\"primary\" to=\"/master-journey/mstjourney\">View Master Journey list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addmstjourney()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addmstjourney;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Addmcq extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mcqname: '',\r\n            qnaoptionlist: '',\r\n            qnaoptionlistarr: [],\r\n            qna: '',\r\n            status: '',\r\n            isDeleted: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.drpdwnhandleChange = this.drpdwnhandleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        debugger;\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    drpdwnhandleChange(event) {\r\n        debugger;\r\n        const getQnaIdvalue = (Array.isArray(event) ? event.map(x => x.value) : []);\r\n        this.setState({\r\n            qnaoptionlist: getQnaIdvalue\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        fetch(BaseapiUrl + '/api/v1/web/qna/optionList')\r\n            .then((resp) => {\r\n                resp.json()\r\n                    .then((result) => {\r\n                        console.warn(result.data);\r\n                        this.setState({\r\n                            qnaoptionlistarr: result.data\r\n                        });\r\n                    })\r\n            });\r\n    }\r\n\r\n    addmcq() {\r\n        debugger;\r\n        if (this.state.mcqname == \"\" || this.state.mcqname == undefined) {\r\n            alert(\"Mcq Name is required\");\r\n        } else if (this.state.qnaoptionlist == \"\" || this.state.qnaoptionlist == undefined) {\r\n            alert(\"Please select option list\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            name: this.state.mcqname,\r\n            qna: this.state.qnaoptionlist,\r\n            status: true,\r\n            isDeleted: false\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/v1/web/admin/mcq/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        debugger;\r\n                        alert(\"Added successfully!\");\r\n                        this.setState({\r\n                            mcqname: '',\r\n                            qnaoptionlist: ''\r\n                        });\r\n                    }\r\n                })\r\n            .catch((e) => {\r\n                console.warn(e);\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let options = this.state.qnaoptionlistarr.map(function (opt) {\r\n            return { value: opt._id, label: opt.question };\r\n        })\r\n        debugger;\r\n        return (\r\n            <div>\r\n                <h1>Add Mcq</h1>\r\n                <Link variant=\"primary\" to=\"/mcqs/mcq\">View Mcq list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"mcqname\">\r\n                                <Form.Label>Mcq Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"mcqname\"\r\n                                    value={this.state.mcqname}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Mcq Name\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"qnaoptionlist\">\r\n                                {/*<select className=\"form-control\" onChange={this.handleChange}>\r\n                                    <option>---select---</option>\r\n                                    {this.state.qnaoptionlistarr.map(function (data, key) {\r\n                                        return (\r\n                                            <option key={key._id} value={data._id}>{data.question}</option>)\r\n                                    })}\r\n                                </select>*/}\r\n\r\n                                <Select\r\n                                    name=\"qnaoptionlist\"\r\n                                    value={this.state.value}\r\n                                    onChange={this.drpdwnhandleChange}\r\n                                    labelKey='_id'\r\n                                    valueKey='question'\r\n                                    options={options}\r\n                                    isMulti\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addmcq()}>Add</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addmcq;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Addpdf extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pdfname: '',\r\n            pdflink: '',\r\n            status:'',\r\n            isDeleted:''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addpdf() {\r\n        debugger;\r\n        if (this.state.pdfname == \"\" || this.state.pdfname == undefined) {\r\n            alert(\"Pdf Name is required\");\r\n        } else if (this.state.pdflink == \"\" || this.state.pdflink == undefined) {\r\n            alert(\"pdf link is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            name: this.state.pdfname,\r\n            link: this.state.pdflink,\r\n            status:true,\r\n            isDeleted:false\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/v1/web/pdf/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        debugger;\r\n                        alert(\"Added successfully!\");\r\n                        this.setState({\r\n                            pdfname: '',\r\n                            pdflink: ''\r\n                        });\r\n                    }\r\n                })\r\n            .catch((e) => {\r\n                console.warn(e);\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Pdf</h1>\r\n                <Link variant=\"primary\" to=\"/pdf/pdf\">View Pdf list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"pdfname\">\r\n                                <Form.Label>Pdf Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pdfname\"\r\n                                    value={this.state.pdfname}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Pdf Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pdflink\">\r\n                                <Form.Label>Pdf link</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pdflink\"\r\n                                    value={this.state.pdflink}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Pdf link\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addpdf()}>Add</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addpdf;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Addppt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pptname: '',\r\n            pptlink: '',\r\n            status:'',\r\n            isDeleted:''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addppt() {\r\n        debugger;\r\n        if (this.state.pptname == \"\" || this.state.pptname == undefined) {\r\n            alert(\"PPT Name is required\");\r\n        } else if (this.state.pptlink == \"\" || this.state.pptlink == undefined) {\r\n            alert(\"PPT link is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            name: this.state.pptname,\r\n            link: this.state.pptlink,\r\n            status:true,\r\n            isDeleted:false\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/v1/web/ppt/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        pptname: '',\r\n                        pptlink: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Ppt</h1>\r\n                <Link variant=\"primary\" to=\"/ppt/ppt\">View Ppt list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"pptname\">\r\n                                <Form.Label>PPT Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pptname\"\r\n                                    value={this.state.pptname}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"PPT Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pptlink\">\r\n                                <Form.Label>PPT Link</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pptlink\"\r\n                                    value={this.state.pptlink}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"PPT Link\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addppt()}>Add</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addppt;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addproject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addproject() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Project</h1>\r\n                <Link variant=\"primary\" to=\"/project/project\">View Project list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addproject()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addproject;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addstudent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addstudent() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Student</h1>\r\n                <Link variant=\"primary\" to=\"/student/student\">View Student list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addstudent()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addstudent;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addtopic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addtopic() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Topic</h1>\r\n                <Link variant=\"primary\" to=\"/topics/topic\">View Topic list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addtopic()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addtopic;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nclass Addvideos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employeeName: '',\r\n            employeeSalary: '',\r\n            employeeAddress: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addvideos() {\r\n        debugger;\r\n        if (this.state.employeeName == \"\" || this.state.employeeName == undefined) {\r\n            alert(\"employee Name is required\");\r\n        } else if (this.state.employeeSalary == \"\" || this.state.employeeSalary == undefined) {\r\n            alert(\"employee Salary is required\");\r\n        } else if (this.state.employeeAddress == \"\" || this.state.employeeAddress == undefined) {\r\n            alert(\"employee Address  is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            employeeName: this.state.employeeName,\r\n            employeeSalary: this.state.employeeSalary,\r\n            Adress: this.state.employeeAddress\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/Employee/\";\r\n        fetch(baseurl, requestOptions)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((results) => {\r\n                if (results) {\r\n                    alert(\"Added successfully!\");\r\n                    this.setState({\r\n                        employeeName: '',\r\n                        employeeSalary: '',\r\n                        employeeAddress: ''\r\n                    })\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Videos</h1>\r\n                <Link variant=\"primary\" to=\"/videos/videos\">View Video list</Link>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"employeeName\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeName\"\r\n                                    value={this.state.employeeName}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeSalary\">\r\n                                <Form.Label>Employee Salary</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeSalary\"\r\n                                    value={this.state.employeeSalary}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Employee Salary\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"employeeAddress\">\r\n                                <Form.Label>EmployeeAddress</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"employeeAddress\"\r\n                                    value={this.state.employeeAddress}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Address\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" onClick={() => this.addvideos()}>Save</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Addvideos;","import React, { Component } from \"react\";\r\nimport { Row, Form, Col, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//const BaseapiUrl = 'http://virtualsolution.adequateshop.com:168';\r\nconst BaseapiUrl = 'http://localhost:5000';\r\n\r\nclass Addqna extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question: '',\r\n            optionone: '',\r\n            optiontwo: '',\r\n            optionthree: '',\r\n            optionfour: '',\r\n            options: [],\r\n            answer: '',\r\n            status: '',\r\n            isDeleted: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    addqna() {\r\n        debugger;\r\n        if (this.state.question == \"\" || this.state.question == undefined) {\r\n            alert(\"question is required\");\r\n        } else if (this.state.optionone == \"\" || this.state.optionone == undefined) {\r\n            alert(\"first option is required\");\r\n        } else if (this.state.optiontwo == \"\" || this.state.optiontwo == undefined) {\r\n            alert(\"second option is required\");\r\n        } else if (this.state.optionthree == \"\" || this.state.optionthree == undefined) {\r\n            alert(\"third option is required\");\r\n        } else if (this.state.optionfour == \"\" || this.state.optionfour == undefined) {\r\n            alert(\"fourth option is required\");\r\n        } else if (this.state.answer == \"\" || this.state.answer == undefined) {\r\n            alert(\"answer is required\");\r\n        }\r\n\r\n        let MeetingToken = Math.floor(Math.random() * 100000000 + 1);\r\n        let body = {\r\n            question: this.state.question,\r\n            options: [this.state.optionone, this.state.optiontwo, this.state.optionthree, this.state.optionfour],\r\n            answer: this.state.answer,\r\n            status: true,\r\n            isDeleted: false\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n\r\n        let baseurl = BaseapiUrl + \"/api/v1/web/qna\";\r\n        fetch(baseurl, requestOptions)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    debugger;\r\n                    if (result) {\r\n                        debugger;\r\n                        alert(\"Added successfully!\");\r\n                        this.setState({\r\n                            question: '',\r\n                            optionone: '',\r\n                            optiontwo: '',\r\n                            optionthree: '',\r\n                            optionfour: '',\r\n                            answer: ''\r\n                        });\r\n                    }\r\n                })\r\n            .catch((e) => {\r\n                console.warn(e);\r\n                alert(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"container-fluid\">\r\n                    <h1>Add QNA</h1>\r\n                    <Link variant=\"primary\" to=\"/qna/qna\">View Qna list</Link>\r\n                </div>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <Row>\r\n                        <Col sm={12}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Label>Question</Form.Label>\r\n                                <Form.Row controlId=\"question\">\r\n                                    <Col sm={3}>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"question\"\r\n                                            value={this.state.question}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter Your Question\" />\r\n                                    </Col>\r\n                                </Form.Row>\r\n\r\n                                <Form.Label>Options</Form.Label>\r\n                                <Form.Row>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"optionone\"\r\n                                            value={this.state.optionone}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter first option\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"optiontwo\"\r\n                                            value={this.state.optiontwo}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter second option\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"optionthree\"\r\n                                            value={this.state.optionthree}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter third option\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"optionfour\"\r\n                                            value={this.state.optionfour}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter fourth option\" />\r\n                                    </Col>\r\n                                </Form.Row>\r\n\r\n                                <Form.Label>Answer</Form.Label>\r\n                                <Form.Row controlId=\"answer\">\r\n                                    <Col sm={3}>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"answer\"\r\n                                            value={this.state.answer}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Enter Correct Answer\" />\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                <br />\r\n                                <Form.Row controlId=\"btnsubmit\">\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Button variant=\"success\" onClick={() => this.addqna()}>Add</Button>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Addqna;","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Navbar from '../common/Navbar'\r\nimport Footer from '../common/Footer'\r\nimport Dashboard from '../dashboard/dashboard'\r\nimport UserProfile from '../common/UserProfile'\r\nimport Manage from '../common/Manage'\r\nimport Sales from '../common/Sales'\r\n//import Form from './Form'\r\nimport Sidebar from '../common/Sidebar';\r\n//import Edit from './Edit'\r\nimport Editemployee from '../dashboard/Editemployee'\r\nimport Addemployee from '../dashboard/Addemployee'\r\n//import Sales from '../sales/sales'\r\n\r\nimport Batch from '../batches/batch'\r\nimport Course from '../courses/course'\r\nimport Journey from '../journey/journey'\r\nimport Lecture from '../lectures/lecture'\r\nimport Masterjourney from '../master-journey/mstjourney'\r\nimport Mcq from '../mcqs/mcq'\r\nimport Pdf from '../pdf/pdf'\r\nimport Ppt from '../ppt/ppt'\r\nimport Project from '../project/project'\r\nimport Student from '../student/student'\r\nimport Topic from '../topics/topic'\r\nimport Videos from '../videos/videos'\r\nimport Qna from '../qna/qna'\r\n\r\nimport Editbatch from '../batches/editbatch'\r\nimport Editcourse from '../courses/editcourse'\r\nimport Editjourney from '../journey/editjourney'\r\nimport Editlecture from '../lectures/editlecture'\r\nimport Editmasterjourney from '../master-journey/editmstjourney'\r\nimport Editmcq from '../mcqs/editmcq'\r\nimport Editpdf from '../pdf/editpdf'\r\nimport Editppt from '../ppt/editppt'\r\nimport Editproject from '../project/editproject'\r\nimport Editstudent from '../student/editstudent'\r\nimport Edittopic from '../topics/edittopic'\r\nimport Editvideos from '../videos/editvideos'\r\nimport Editqna from '../qna/editqna'\r\n\r\nimport Addbatch from '../batches/addbatch'\r\nimport Addcourse from '../courses/addcourse'\r\nimport Addjourney from '../journey/addjourney'\r\nimport Addlecture from '../lectures/addlecture'\r\nimport Addmasterjourney from '../master-journey/addmstjourney'\r\nimport Addmcq from '../mcqs/addmcq'\r\nimport Addpdf from '../pdf/addpdf'\r\nimport Addppt from '../ppt/addppt'\r\nimport Addproject from '../project/addproject'\r\nimport Addstudent from '../student/addstudent'\r\nimport Addtopic from '../topics/addtopic'\r\nimport Addvideos from '../videos/addvideos'\r\nimport Addqna from '../qna/addqna'\r\n//import Login from \"./components/Login\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n        \r\n      \r\n      <div className=\"main-panel\">\r\n      \r\n      \r\n        \r\n       <Sidebar />\r\n\r\n  \r\n      \r\n      \r\n        <Navbar />\r\n        <Switch>\r\n        <Route path =\"/dashboard/Editemployee/:id\" component={Editemployee} />\r\n        <Route path =\"/dashboard/Addemployee\" component={Addemployee} />\r\n\r\n        <Route path =\"/batches/batch\" component={Batch} />\r\n        <Route path =\"/courses/course\" component={Course} />\r\n        <Route path =\"/journey/journey\" component={Journey} />\r\n        <Route path =\"/lectures/Lecture\" component={Lecture} />\r\n        <Route path =\"/master-journey/mstjourney\" component={Masterjourney} />\r\n        <Route path =\"/mcqs/mcq\" component={Mcq} />\r\n        <Route path =\"/pdf/pdf\" component={Pdf} />\r\n        <Route path =\"/ppt/ppt\" component={Ppt} />\r\n        <Route path =\"/project/project\" component={Project} />\r\n        <Route path =\"/student/student\" component={Student} />\r\n        <Route path =\"/topics/topic\" component={Topic} />\r\n        <Route path =\"/videos/videos\" component={Videos} />\r\n        <Route path =\"/qna/qna\" component={Qna} />\r\n\r\n        <Route path =\"/batches/editbatch/:id\" component={Editbatch} />\r\n        <Route path =\"/courses/editcourse/:id\" component={Editcourse} />\r\n        <Route path =\"/journey/editjourney/:id\" component={Editjourney} />\r\n        <Route path =\"/lectures/editlecture/:id\" component={Editlecture} />\r\n        <Route path =\"/master-journey/editmstjourney/:id\" component={Editmasterjourney} />\r\n        <Route path =\"/mcqs/editmcq/:id\" component={Editmcq} />\r\n        <Route path =\"/pdf/editpdf/:id\" component={Editpdf} />\r\n        <Route path =\"/ppt/editppt/:id\" component={Editppt} />\r\n        <Route path =\"/project/editproject/:id\" component={Editproject} />\r\n        <Route path =\"/student/editstudent/:id\" component={Editstudent} />\r\n        <Route path =\"/topics/edittopic/:id\" component={Edittopic} />\r\n        <Route path =\"/videos/editvideos/:id\" component={Editvideos} />\r\n        <Route path =\"/qna/editqna/:id\" component={Editqna} />\r\n\r\n        <Route path =\"/batches/addbatch\" component={Addbatch} />\r\n        <Route path =\"/courses/addcourse\" component={Addcourse} />\r\n        <Route path =\"/journey/addjourney\" component={Addjourney} />\r\n        <Route path =\"/lectures/addlecture\" component={Addlecture} />\r\n        <Route path =\"/master-journey/addmstjourney\" component={Addmasterjourney} />\r\n        <Route path =\"/mcqs/addmcq\" component={Addmcq} />\r\n        <Route path =\"/pdf/addpdf\" component={Addpdf} />\r\n        <Route path =\"/ppt/addppt\" component={Addppt} />\r\n        <Route path =\"/project/addproject\" component={Addproject} />\r\n        <Route path =\"/student/addstudent\" component={Addstudent} />\r\n        <Route path =\"/topics/addtopic\" component={Addtopic} />\r\n        <Route path =\"/videos/addvideos\" component={Addvideos} />\r\n        <Route path =\"/qna/addqna\" component={Addqna} />\r\n\r\n        \r\n\r\n          {/*<Route path =\"/Form\" component={Form} />*/}\r\n          {/*<Route path =\"/Edit\" component={Edit} />*/}\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          <Route path=\"/profile\" component={UserProfile} />\r\n          <Route path=\"/Manage\" component={Manage} />\r\n          <Route path=\"/Sales\" component={Sales} />\r\n          <Redirect from='*' to='/dashboard' />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main","import React, { Component } from \"react\";\r\nimport { Route, Link, Router, Switch } from \"react-router-dom\";\r\nimport Main from './Main';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\n\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"maincontainer\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row no-gutter\">\r\n\r\n                            <div className=\"col-md-6 d-none d-md-flex bg-light\"></div>\r\n\r\n                            <div class=\"col-md-6 bg-image\">\r\n                                <div class=\"login d-flex align-items-center py-5\">\r\n\r\n                                    <div class=\"container\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-lg-10 col-xl-7 mx-auto\">\r\n                                                <h3 class=\"display-4 text-center\">Masterkoder</h3>\r\n                                                <p class=\"text-muted mb-4 text-center\">Learning Simplified</p>\r\n                                                <form>\r\n                                                    <div class=\"form-group mb-3\">\r\n                                                        <input id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\" />\r\n                                                    </div>\r\n                                                    <div class=\"form-group mb-3\">\r\n                                                        <input id=\"inputPassword\" type=\"password\" placeholder=\"Password\" required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\" />\r\n                                                    </div>\r\n                                                    {/*<div class=\"custom-control custom-checkbox mb-3\">\r\n                                                        <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\" />\r\n                                                        <label for=\"customCheck1\" class=\"custom-control-label\">Remember password</label>\r\n                                                    </div>*/}\r\n                                                    <div class=\"form-group col-sm-5\">\r\n                                                        <Switch>\r\n                                                            <Route path=\"/Main\" component={Main} />\r\n                                                            <Link to=\"/Main\" className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\">Sign in</Link>\r\n                                                        </Switch>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Login\r\n\r\n//https://69b8e31e447599cd29aec01f3b4aa8e6.m.pipedream.net","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n//import Sidebar from './components/Dashboard/Sidebar';\nimport Main from './components/dashboard/Main';\nimport Login from \"./components/dashboard/Login\";\nimport Sidebar from \"./components/common/Sidebar\";\n\n//Datatable Modules\nimport \"../node_modules/datatables.net-dt/js/dataTables.dataTables\";\nimport \"../node_modules/datatables.net-dt/css/jquery.dataTables.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n     \n\n      <div className=\"wrapper\">\n       \n        \n        <Router>\n          <Switch>\n            <Route exact path='/login' component={Login} />\n            <Route path='/' component={Main} />\n          </Switch>\n        </Router>\n      </div>\n      </div>\n    )\n  }\n}\n\n/*import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\n\nfunction App() {\n  return (<Router>\n    <div className=\"App\">\n      <div className=\"outer\">\n        <div className=\"inner\">\n          <Switch>\n            <Route exact path='/' component={Login} />\n            <Route path=\"/Dashboard\" component={Dashboard} />  \n          </Switch>\n        </div>\n      </div>\n    </div></Router>\n  );\n}*/\n\nexport default App;\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport './assets/css/Tog.css'\nimport \"./assets/css/bootstrap.min.css\";\nimport './assets/css/light-bootstrap-dashboard.css';\n//import \"./assets/css/dashboard.css\";\n//import \"../node_modules/font-awesome/css/font-awesome.min.css\";\n\n\n//import Data2 from './components/Dashboard/Data2'\n//import * as serviceWorker from \"./serviceWorker\";\n//import Cards from './components/Dashboard/Cards'\n//import Crud from './components/Dashboard/Crud'\n//import Salesc from './components/Dashboard/Salesc'\n//import Userc from './components/Dashboard/Userc'\n///import Login from './components/Dashboard/Login'\n//import Form from './components/Dashboard/Form'\n//import Apilog from './Apilog'\n//import Submitform from './Submitform'\n//import Sidebar from './components/Teacher/Sidebar'\n//import Main from './components/Teacher/Main'\n//import Edit from './components/Dashboard/Edit'\nReactDOM.render(\n    <Router>\n        <div className=\"App\">\n            <App />\n        </div>\n    </Router>,\n    document.getElementById(\"root\")\n);\n\n//serviceWorker.unregister();\n\n\n{/*import ReactDOM from \"react-dom\";\n\nimport './assets/css/style.css';\nimport SideBar from \"./components/common/Sidebar\";\n\nfunction App() {\n  return (\n    <div id=\"App\">\n      <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n\n      <div id=\"page-wrap\">\n       \n        <h2> sidebar!</h2>\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);*/}\n"],"sourceRoot":""}